Several indices needed for each search area. A general index indexing all information
could be necessary for the first question. This could also be solved by searching through
all created indices for a general query.

Suggested indices include:
    * Questions
    * Tags
    * Answers
    * Comments
    * Titles
    * From a specific user

Finding keywords to index:
    Either we index all terms, or simply add those found in computer science dictionaries.
    Simply indexing those keywords found in a computer science dictionary is enough to
    satisfy requirement 2, however it is not enough for the first requirement.
    It might therefore be advisable to index terms from a standard dictionary as well as
    computer science terms.

    If we index all terms, we can still get a moderately sized dictionary by joining together synonyms
    as well as other techniques.
    Spellchecking could be added while preprocessing to reduce the amount of terms created,
    however it takes an estimated 2-3 s to spell check. So this step will be skipped for now.

    Solution 2:
    Only add words from tags to the dictionary in addition to the ones in the standard dictionary.


Creating dictionary:
    nltk is a good start. However, it is missing computer science terms.

Structure of index:
    HashMap(term, postinglist)
    Sorted list of terms with each term having an identifiable position in array.

    Posting list: ArrayList or similar would make sense for jump search. Otherwise, linkedlist also makes sense.
                    As we do not edit the list beyond creation in this case, linkedlist however doesn't have a lot of
                    advantages.